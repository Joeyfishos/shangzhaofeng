/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
	class Solution {
	public:
		bool hasCycle(ListNode* head) {
			unordered_set<ListNode*> nodesSeen;
			unordered_set<ListNode*>::iterator it;
			while (head != NULL) {
				it=nodesSeen.find(head);
				if (it!=nodesSeen.end()) {
					return true;
				}
				else {
					nodesSeen.insert(head);
				}
				head = head->next;
			}
			return false;
		}
	};
