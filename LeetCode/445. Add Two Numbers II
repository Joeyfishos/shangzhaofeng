/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
   
        ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
            stack<int> s1,s2;
            for(;l1;l1=l1->next){s1.push(l1->val);}
            for(;l2;l2=l2->next){s2.push(l2->val);}
            ListNode *cur=new ListNode(0),*p;
            for(int sum=0;!s1.empty()||!s2.empty();)
            {
                if(!s1.empty())
                {
                    sum+=s1.top(),s1.pop();
                }
                if(!s2.empty())
                {
                    sum+=s2.top(),s2.pop();
                }
                cur->val=sum%10;//deal with the remainder
                p=new ListNode(sum/=10);// use the up number to create a new Node, is sum/=10 not sum/10
                //sum/=10;
                p->next=cur;
                cur=p;//let cur point to the significant digit
            }
            return cur->val ? cur: cur->next;//when up number is 0, so the first Node is 0, like 3+5=8, have no carry bit.
    }
};
